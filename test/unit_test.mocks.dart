// Mocks generated by Mockito 5.4.4 from annotations
// in weatherapp/test/unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:weatherapp/data/data_source/remote/errors.dart' as _i4;
import 'package:weatherapp/domain/repository/repository_impl.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RepoImplementation].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepoImplementation extends _i1.Mock
    implements _i2.RepoImplementation {
  @override
  _i3.Future<_i4.Result<Map<String, dynamic>?, Exception>> getWeather({
    required String? appId,
    required String? unit,
    required String? city,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeather,
          [],
          {
            #appId: appId,
            #unit: unit,
            #city: city,
          },
        ),
        returnValue:
            _i3.Future<_i4.Result<Map<String, dynamic>?, Exception>>.value(
                _i5.dummyValue<_i4.Result<Map<String, dynamic>?, Exception>>(
          this,
          Invocation.method(
            #getWeather,
            [],
            {
              #appId: appId,
              #unit: unit,
              #city: city,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Result<Map<String, dynamic>?, Exception>>.value(
                _i5.dummyValue<_i4.Result<Map<String, dynamic>?, Exception>>(
          this,
          Invocation.method(
            #getWeather,
            [],
            {
              #appId: appId,
              #unit: unit,
              #city: city,
            },
          ),
        )),
      ) as _i3.Future<_i4.Result<Map<String, dynamic>?, Exception>>);
}
